--- ansible-tower-advanced/7-parallel-jobs/_index.md
+++ content/ansible-tower-advanced/7-parallel-jobs/_index.md
@@ -1,12 +1,22 @@
-# Exercise 7 - Start Parallel Jobs across Instances
++++
+title = "Parallel Jobs"
+weight = 7
++++
 
-The real power of instance groups is revealed when multiple jobs are started, and they are assigned to different Tower nodes. To launch parallel jobs we will set up a workflow with multiple concurrent jobs.
+The real power of instance groups is revealed when multiple jobs are
+started, and they are assigned to different Tower nodes. To launch
+parallel jobs we will set up a workflow with multiple concurrent jobs.
 
 ## Lab Scenario
 
-To configure something meaningful we'll make a quick detour into security automation here. During this lab we’ll focus on security compliance according to STIG, CIS and so on. Often these compliance rules are enforced by executing an Ansible task per each requirement. This makes documentation and audit easier.
+During this lab we’ll focus on security compliance according to STIG,
+CIS and so on. Often these compliance rules are enforced by executing an
+Ansible task per each requirement. This makes documentation and audit
+easier.
 
-Compliance requirements are often grouped into independent categories. The tasks can often be executed in parallel because they do not conflict with each other.
+Compliance requirements are often grouped into independent categories.
+The tasks can often be executed in parallel because they do not conflict
+with each other.
 
 In our demo case we use three playbooks which:
 
@@ -16,87 +26,96 @@ In our demo case we use three playbooks which:
 
   - ensure absence of services and kernel modules (CIS).
 
-The Playbooks can be found in the Github repository you already setup as a **Project** in your Tower.
+The Playbooks can be found in the Github repository you already setup.
 
 ## Prepare the Compliance Lab
 
 ### First Step: Create three Templates
 
-As mentioned the Github repository contains three Playbooks to enforce different compliance requirements. First create these three templates and attach credentials using the `awx` CLI in the VSCode terminal:
+As mentioned the Github repository contains three Playbooks to enforce
+different compliance requirements. First create these three templates
+via `awx`:
 
-    [student@ansible ~]$ awx job_template create --name "Compliance STIG packages" \
+    [root@ansible ~]# awx job_template create --name "Compliance STIG packages" \
                           --job-type run \
                           --inventory "Example Inventory" \
                           --project "Apache"  \
                           --playbook "stig-packages.yml" \
                           --become_enabled 1
 
-    [student@ansible ~]$ awx -f human job_template associate --name "Compliance STIG packages" \
-                          --credential "Example Credentials"
 
-
-    [student@ansible ~]$ awx job_template create --name "Compliance STIG config" \
+    [root@ansible ~]# awx job_template create --name "Compliance STIG config" \
                           --job_type run \
                           --inventory "Example Inventory" \
                           --project "Apache" \
                           --playbook "stig-config.yml" \
                           --become_enabled 1
 
-    [student@ansible ~]$ awx -f human job_template associate --name "Compliance STIG config" \
-                          --credential "Example Credentials"
-
-    [student@ansible ~]$ awx job_template create --name "Compliance CIS" \
+    [root@ansible ~]# awx job_template create --name "Compliance CIS" \
                           --job-type run  \
                           --inventory "Example Inventory" \
                           --project "Apache" \
                           --playbook "cis.yml" \
                           --become_enabled 1
 
-    [student@ansible ~]$ awx -f human job_template associate --name "Compliance CIS" \
-                          --credential "Example Credentials"
-
 
 ## Create Parallel Workflow
 
-To enable parallel execution of the tasks in these job templates, we will create a workflow. We’ll use the web UI because using **awx** for this is a bit too involved for a lab. Workflows are configured in the **Templates** view, you might have noticed you can choose between **Job Template** and **Workflow Template** when adding a template.
+To enable parallel execution of the tasks in these job templates, we
+will create a workflow. We’ll use the web UI because using **awx**
+for this is a bit too involved for a lab. Workflows are configured in
+the **Templates** view, you might have noticed you can choose between
+**Job Template** and **Workflow Template** when adding a template.
 
-  - Go to the **Templates** view and click the ![plus](../../images/green_plus.png) button. This time choose **Workflow Template**
+  - Go to the **Templates** view and click the
+    ![plus](../../images/green_plus.png?classes=inline) button. This time choose **Workflow
+    Template**
 
       - **NAME:** Compliance Workflow
 
       - **ORGANIZATION:** Default
 
-      - Click **SAVE**
+  - Click **SAVE**
 
-  - Now the **WORKFLOW VISUALIZER** button becomes active and the     graphical workflow designer opens.
+  - Now the **WORKFLOW VISUALIZER** button becomes active and the
+    graphical workflow designer opens.
 
-  - Click on the **START** button, a new node opens. To the right you can assign an action to the node, you can choose between **JOBS**, **PROJECT SYNC** and **INVENTORY SYNC**.
+  - Click on the **START** button, a new node opens. To the right you
+    can assign an action to the node, you can choose between **JOBS**,
+    **PROJECT SYNC** and **INVENTORY SYNC**.
 
-  - In this lab we’ll link multiple jobs to the **START**, so select the **Compliance STIG packages** job template and click **SELECT**. The node gets annotated with the name of the job.
+  - In this lab we’ll link multiple jobs to the **START**, so select the
+    **Compliance STIG packages** job and click **SELECT**. The node gets
+    annotated with the name of the job.
 
   - Click on the **START** button again, another new node opens.
 
-  - Select the **Compliance STIG config** job template and click **SELECT**. The node gets annotated with the name of the job.
+  - Select the **Compliance STIG config** job and click **SELECT**. The
+    node gets annotated with the name of the job.
 
   - Click on the **START** button again, another new node opens.
 
-  - Select the **Compliance CIS** job template and click **SELECT**. The node gets annotated with the name of the job.
+  - Select the **Compliance CIS** job and click **SELECT**. The node
+    gets annotated with the name of the job.
 
   - Click **SAVE**
 
   - In the workflow overview window, again click **SAVE**
 
-You have configured a Workflow that is not going through templates one after the other but rather executes three templates in parallel.
+You have configured a Workflow that is not going through templates one
+after the other but rather executes three templates in parallel.
 
 ## Execute and Watch
 
 Your workflow is ready to go, launch it.
 
-  - In the **Templates** view launch the **Compliance Workflow** by clicking the rocket icon.
+  - In the **Templates** view launch the **Compliance Workflow** by
+    clicking the rocket icon.
 
-  - Wait until the workflow has finished.
+  - Wait until the job has finished.
 
-Go to the **Instance Groups** view and find out how the jobs where distributed over the instances:
+Go to the **Instance Groups** view and find out how the jobs where
+distributed over the instances:
 
   - Open the **INSTANCES** view of the tower instance group.
 
