--- ansible-getting-started/4-variables/_index.md
+++ content/ansible-getting-started/4-variables/_index.md
@@ -1,6 +1,7 @@
-# Exercise 4 - Using Variables
-
-**Read this in other languages**: ![uk](../../images/uk.png) [English](_index.md),  ![japan](../../images/japan.png) [日本語](README.ja.md).
++++
+title = "Using Variables"
+weight = 4
++++
 
 Previous exercises showed you the basics of Ansible Engine.  In the next few exercises, we are going
 to teach some more advanced Ansible skills that will add flexibility and power to your playbooks.
@@ -30,7 +31,7 @@ The recommended practice to provide variables in the inventory is to define them
 >
 > Host variables take precedence over group variables (more about precedence can be found in the [docs](https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#variable-precedence-where-should-i-put-a-variable)).
 
-## Step 4.1 - Create Variable Files
+## Create Variable Files
 
 For understanding and practice let’s do a lab. Following up on the theme "Let’s build a webserver. Or two. Or even more…​", you will change the `index.html` to show the development environment (dev/prod) a server is deployed in.
 
@@ -62,7 +63,7 @@ What is this about?
 
   - For server `node2` this is overriden and the host is flagged as a production server.
 
-## Step 4.2 - Create index.html Files
+## Create index.html Files
 
 Now create two files in `~/ansible-files/`:
 
@@ -82,7 +83,7 @@ And the other called `dev_index.html` with the following content:
 </body>
 ```
 
-## Step 4.3 - Create the Playbook
+## Create the Playbook
 
 Now you need a Playbook that copies the prod or dev `index.html` file - according to the "stage" variable.
 
@@ -112,7 +113,7 @@ Create a new Playbook called `deploy_index_html.yml` in the `~/ansible-files/` d
 [student<X>@ansible ansible-files]$ ansible-playbook deploy_index_html.yml
 ```
 
-## Step 4.4 - Test the Result
+## Test the Result
 
 The Playbook should copy different files as index.html to the hosts, use `curl` to test it. Check the inventory again if you forgot the IP addresses of your nodes.
 
@@ -139,7 +140,7 @@ node3 ansible_host=33.44.55.66
 >
 > If by now you think: There has to be a smarter way to change content in files…​ you are absolutely right. This lab was done to introduce variables, you are about to learn about templates in one of the next chapters.
 
-## Step 4.5 - Ansible Facts
+## Ansible Facts
 
 Ansible facts are variables that are automatically discovered by Ansible from a managed host. Remember the "Gathering Facts" task listed in the output of each `ansible-playbook` execution? At that moment the facts are gathered for each managed node. Facts can also be pulled by the `setup` module. They contain useful information stored into variables that administrators can reuse.
 
@@ -160,7 +161,7 @@ Or what about only looking for memory related facts:
 [student<X>@ansible ansible-files]$ ansible node1 -m setup -a 'filter=ansible_*_mb'
 ```
 
-## Step 4.6 - Challenge Lab: Facts
+## Challenge Lab: Facts
 
   - Try to find and print the distribution (Red Hat) of your managed hosts. On one line, please.
 
@@ -181,7 +182,7 @@ Or what about only looking for memory related facts:
 > </p>
 > </details>
 
-## Step 4.7 - Using Facts in Playbooks
+## Using Facts in Playbooks
 
 Facts can be used in a Playbook like variables, using the proper naming, of course. Create this Playbook as `facts.yml` in the `~/ansible-files/` directory:
 
@@ -232,5 +233,5 @@ node3                      : ok=2    changed=0    unreachable=0    failed=0
 ```
 
 ----
-
-[Click here to return to the Ansible for Red Hat Enterprise Linux Workshop](../_index.md#section-1---ansible-engine-exercises)
+|[Previous Excercise](../4-variables)|[Return to the Ansible for Red Hat Enterprise Linux Workshop](../) | [Next Excercise](../5-handlers)|
+|:---|:---:|---:|
